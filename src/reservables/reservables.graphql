enum ReservableDay {
    Sunday
    Monday
    Tuesday
    Wednesday
    Thursday
    Friday
    Saturday
}

enum ReservableSession {
    Breakfast
    Morning
    Lunch
    Afternoon
    Evening
}

enum ReservableType {
    Equipment
    Room
}

type Reservable @key(fields: "id") {
    id: ID!
    name: String!
    description: String!
    type: ReservableType!
    days: [ReservableDay!]!
    sessions: [ReservableSession!]
    reservations: [Reservation!]!
}

type ReservablePayload {
    errors: [UserError!]
    reservable: Reservable
}

input ReservableInput {
    name: String!
    description: String!
    type: ReservableType!
    days: [ReservableDay!]!
    sessions: [ReservableSession!]!
}

extend type Query {
    reservable(id: ID!): Reservable
    reservables(ids: [ID!]): [Reservable!]
    reservablesByType(type: ReservableType!): [Reservable!]
}

extend type Mutation {
    reservableCreate(reservable: ReservableInput!): ReservablePayload
    reservableUpdate(id: ID!, reservable: ReservableInput!): ReservablePayload
    reservableDelete(id: ID!): ReservablePayload
}
